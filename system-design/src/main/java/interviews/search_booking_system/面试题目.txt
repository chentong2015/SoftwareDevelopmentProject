Design a system that allows patients to search for and book a practitioner.
The system should handle searching for doctors based on location, specialty, and availability.
It also needs to support booking, rescheduling, and canceling appointments.

TODO. 1. Requirements Gathering 根据题目选择适当的提问
1. Support Web and Mobile UI ?
2. We don't need to login for searching, but booking ?
3. Support find/view scheduled appointments
4. Searching and booking are web services ? provide REST APIs ?

Functional Requirements: Two core services 包含两个核心的服务
- Searching Service: Search doctors
- Booking Service: Book + Reschedule + Cancel + View

Non-functional requirements:
- Low latency: searching less than 1s 本地缓存来加速搜索的结果，设置缓存过期算法
- High available: user can access services at anytime and from everywhere 服务不会有任何挂断的情况
- High reliable(safety): all booking information should never be lost 数据表的备份和刷新
- High consistent: share same information between mobile and web 不同的APP使用相同的后端服务

TODO. 2. High-level Design 设计整体的框架
整理出系统中的核心组件和服务，绘制简单架构图

TODO. 3. Deep into system 完善框架细节，自顶向下设计
- Load Balancer / Duplication
- REST API
- Caching
- ORM Engine
- DB Schema / DB backup

TODO. 4. Scalability / Estimation
- Hash Consistent
- Service Discovery
- Scalability: 分布式系统的服务可扩展性
- Caching Details: 缓存设计的细节
- DB Duplication / Data Sharding 数据库的查分问题

- Request Estimation 用户请求量的估计
- Table Estimation 数据表存储的估计

TODO. 5. Optimization / Improvements
- Monitoring: 服务的监控
- Automated Testing: 服务的自动化测试

TODO. 6. Sum up 简单的总结
- Known Issue 讨论系统中已知的一些问题