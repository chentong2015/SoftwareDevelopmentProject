Design a system that allows patients to search for and book a practitioner.
The system should handle searching for doctors based on location, specialty, and availability.
It also needs to support booking, rescheduling, and canceling appointments.

TODO. Requirements Gathering 根据题目选择适当的提问
1. Support Web and Mobile UI ?
2. We don't need to log-in for searching, but booking !
3. Database Constraints/Limitation
4. How many users are using Searching/Booking at same time ?
4. Traffic estimates: QPS,
5. Storage estimates: Memory
...

TODO. High-level Design 设计整体的框架
Functional Requirements: Two core services 包含两个核心的服务功能, 核心的.
- Searching Service
  User can search doctors
- Booking Service
  Book + Reschedule + Cancel

Non-functional requirements:
- Minimum latency during searching, less than 2s 使用本地缓存来加速搜索的结果，设置缓存过期(5 minutes)
- Safety / Highly reliable: all booking should never be lost 数据表的备份和刷新
- High consistent: share same information between Mobile and web 不同的APP使用相同的后端服务


TODO. Deep Dive / Deep into system 完善框架的细节，设计API，算法，数据表等
- REST API
- LB for balancing the traffic
- Database Design
- Data Sharding / Data Partitioning
- Caching for searching

- Microservice for large-scale system 大型系统中的微服务，支撑副本和分布式部署
- Monitoring the performance of our service 监听服务的性能，


TODO. Optimization 讨论系统相关的问题，解决分布式系统的关键
 Scaling, Fault tolerance, and data consistency
- Scaling: 增加部署的服务，调整LB的map映射
- Fault tolerance: 系统没有单点故障(single point failure), 一个服务出错也不会挂掉整个系统
- Data consistency: 数据在备份(backup)的时候需要刷新




