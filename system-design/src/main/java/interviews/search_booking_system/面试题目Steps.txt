Design a system that allows patients to search for and book a practitioner.
The system should handle searching for doctors based on location, specialty, and availability.
It also needs to support booking, rescheduling, and canceling appointments.

TODO. 1. Requirements Gathering 根据题目选择适当的提问
1. Support Web and Mobile UI ?
2. We don't need to login for searching, but booking ?
3. Support find/view scheduled appointments

Functional Requirements: Two core services 包含两个核心的服务功能, 核心的.
- Searching Service: Search doctors
- Booking Service: Book + Reschedule + Cancel + View

Non-functional requirements:
- Low latency: searching less than 1s 本地缓存来加速搜索的结果，设置缓存过期算法
- High available: user can access services anytime and everywhere 服务不会有任何挂断的情况
- High reliable(safety): all booking information should never be lost 数据表的备份和刷新
- High consistent: share same information between mobile and web 不同的APP使用相同的后端服务

TODO. 2. High-level Design 设计整体的框架
整理出系统中的核心组件和服务，绘制简单架构图

TODO. 3. Deep into system 完善框架细节，自顶向下设计
- Load Balancer / Service Discovery
- REST API
- Caching for searching
- SQL
- Data Schema / DB backup (Data consistency)

TODO. 4. Optimization & Estimation 讨论系统相关的问题，解决分布式系统的关键
- Monitoring: 服务的监控
- Scalability: 分布式系统的服务可扩展性
- Fault tolerance: 系统没有单点故障(single point failure)
- Data Sharding / Data Partitioning
  - Horizontal Scaling: 根据id来划分，需要全局的分布式id生成器，搜索时需要整合全部的搜索结果
  - Vertical Scaling: Based on service 将不同服务的数据存储到不同的数据库
- Automated Testing: 服务的自动化测试

TODO. 5. Sum up 简单的总结